
/*
 * FH_Related_Func.c
 *
 *  Created on: 2021-10-26
 *      Author: ioa
 */
#include "stdafx.h"
#include <stdio.h>
#include <string.h>
#include "FH/FH_Related_Func.h"
/* --------------------------------------- 宏定义 -------------------------------------------- */
#define FH_SRC_NUM_BYTE    				64
#define FH_SRC_NUM_BIT	  				(FH_SRC_NUM_BYTE   	* 8)								//512(64、128)
#define FH_SRC_CRC_OUT_BIT				(FH_SRC_NUM_BIT    	+ 16)								//528(80、144)
#define FH_SRC_CNV_BIT					FH_SRC_CRC_OUT_BIT	* 2									//1056(160、288)
#define FH_SRC_CNV_OUT_BIT				FH_SRC_CNV_BIT		* 4									//4224(640、1152)

/* -------------------------------------接口参数声明------------------------------------------ */
static unsigned char Cnv_Jump_State[FH_SRC_CNV_BIT] = {0};

/* -------------------------------------全局变量定义------------------------------------------ */
const uint16_t Interleave_Seq[FH_SRC_CNV_BIT] =
        { 86, 383, 107, 317, 889, 964, 873, 1024, 856, 839, 473, 675, 730, 493, 203, 423, 982, 398, 546, 239, 948, 1041, 143, 483, 725, 292, 431, 779, 32, 320, 201, 857, 755, 826, 607, 665, 841, 0, 363, 498, 520, 559, 334, 907, 144, 419, 406, 895, 58, 482, 806, 304, 1015, 1055, 780, 366, 837, 207, 632, 573, 261, 606, 541, 787, 641, 1044, 842, 583,
          151, 110, 551, 255, 602, 348, 714, 71, 893, 926, 152, 782, 696, 421, 616, 584, 517, 648, 977, 265, 40, 357, 24, 178, 445, 599, 769, 390, 381, 90, 618, 116, 338, 724, 595, 923, 560, 1028, 62, 500, 115, 1047, 578, 739, 133, 465, 969, 908, 894, 197, 701, 691, 1025, 476, 166, 145, 294, 633, 901, 64, 976, 1001, 488, 479, 449, 915, 209, 400,
          800, 859, 708, 759, 718, 323, 174, 971, 4, 184, 210, 703, 540, 335, 490, 95, 920, 462, 155, 686, 994, 933, 216, 177, 16, 112, 376, 592, 1016, 257, 25, 936, 961, 575, 182, 513, 855, 989, 617, 495, 793, 345, 537, 395, 871, 1020, 6, 311, 472, 939, 884, 260, 771, 439, 745, 422, 553, 92, 821, 274, 316, 192, 797, 655, 679, 339, 159, 475, 563,
          168, 978, 427, 33, 598, 1039, 141, 347, 319, 370, 169, 333, 399, 680, 642, 39, 351, 79, 579, 522, 297, 263, 463, 702, 341, 2, 1027, 103, 331, 1007, 369, 173, 1040, 121, 45, 829, 233, 104, 269, 467, 254, 296, 591, 931, 899, 716, 600, 804, 952, 244, 1053, 276, 402, 313, 790, 456, 684, 501, 102, 193, 911, 538, 983, 946, 303, 670, 1029, 581,
          874, 54, 200, 809, 916, 34, 552, 401, 1019, 237, 639, 944, 587, 84, 818, 750, 52, 929, 73, 1049, 282, 530, 731, 788, 993, 958, 180, 853, 293, 511, 742, 424, 949, 221, 582, 392, 273, 846, 243, 697, 356, 555, 480, 649, 707, 21, 862, 397, 574, 1018, 785, 832, 798, 474, 429, 248, 741, 220, 698, 285, 361, 310, 729, 1004, 819, 950, 20, 1026,
          55, 434, 163, 835, 638, 968, 111, 572, 74, 593, 407, 509, 433, 990, 738, 627, 11, 289, 783, 605, 589, 275, 122, 162, 373, 851, 198, 441, 687, 561, 72, 502, 396, 99, 525, 135, 225, 464, 374, 1048, 938, 847, 1034, 312, 622, 594, 142, 536, 770, 82, 226, 179, 411, 393, 272, 167, 902, 252, 940, 833, 1011, 298, 597, 761, 548, 519, 371, 903,
          440, 19, 963, 1006, 619, 1052, 425, 636, 849, 435, 43, 585, 129, 625, 1014, 723, 213, 612, 875, 301, 318, 1031, 631, 346, 550, 80, 850, 726, 646, 208, 161, 286, 831, 914, 88, 250, 803, 545, 414, 350, 651, 820, 1037, 998, 867, 728, 883, 668, 807, 415, 628, 444, 840, 503, 733, 860, 576, 291, 943, 253, 486, 1, 694, 87, 603, 719, 706, 781,
          1033, 278, 817, 7, 81, 56, 973, 215, 249, 290, 774, 306, 497, 956, 932, 789, 720, 205, 528, 941, 878, 1002, 1021, 960, 139, 259, 410, 802, 469, 437, 669, 768, 869, 813, 172, 117, 822, 1045, 68, 443, 881, 662, 987, 382, 238, 866, 38, 224, 91, 898, 997, 529, 772, 1054, 430, 204, 413, 105, 367, 94, 391, 861, 934, 1008, 844, 436, 748, 477,
          623, 635, 689, 1036, 758, 8, 654, 126, 927, 699, 328, 230, 461, 247, 137, 734, 626, 713, 65, 913, 194, 214, 757, 812, 996, 740, 18, 877, 778, 428, 268, 690, 47, 647, 658, 468, 108, 751, 17, 417, 549, 451, 29, 236, 336, 660, 378, 562, 799, 75, 48, 183, 492, 885, 343, 372, 896, 823, 280, 854, 732, 945, 910, 418, 175, 568, 543, 353, 753, 1013,
          228, 132, 830, 864, 405, 909, 624, 36, 775, 506, 1023, 354, 752, 154, 921, 308, 688, 140, 283, 954, 23, 611, 985, 865, 571, 199, 601, 663, 148, 63, 309, 588, 368, 35, 784, 270, 796, 380, 358, 1009, 650, 715, 344, 147, 526, 570, 843, 471, 762, 325, 12, 455, 975, 580, 596, 1042, 749, 106, 518, 489, 554, 613, 136, 532, 337, 31, 955, 791, 515,
          409, 470, 156, 712, 235, 988, 767, 868, 277, 324, 677, 882, 432, 452, 57, 379, 531, 191, 765, 710, 360, 514, 118, 420, 863, 28, 558, 763, 664, 523, 736, 747, 1022, 727, 986, 364, 165, 496, 281, 704, 900, 836, 453, 212, 22, 535, 922, 321, 685, 170, 629, 332, 876, 412, 50, 892, 124, 972, 905, 858, 15, 1030, 246, 760, 93, 879, 811, 825, 621,
          14, 547, 645, 37, 288, 586, 300, 671, 852, 756, 693, 120, 786, 287, 3, 98, 567, 937, 195, 637, 223, 85, 365, 614, 845, 385, 667, 834, 66, 1035, 1003, 314, 919, 229, 478, 149, 722, 46, 76, 816, 181, 683, 666, 329, 251, 302, 27, 1032, 218, 974, 67, 815, 267, 661, 387, 171, 766, 241, 533, 30, 494, 981, 1010, 604, 935, 342, 924, 9, 187, 307, 217,
          512, 872, 206, 544, 164, 672, 951, 264, 130, 362, 176, 711, 89, 53, 386, 240, 315, 608, 416, 377, 925, 295, 967, 340, 792, 682, 828, 984, 524, 870, 305, 609, 327, 100, 61, 709, 188, 459, 534, 349, 565, 1043, 652, 10, 674, 185, 271, 153, 481, 979, 131, 446, 930, 801, 848, 918, 888, 352, 590, 640, 83, 838, 113, 450, 776, 330, 681, 510, 962,
          157, 484, 245, 447, 1000, 717, 521, 634, 426, 777, 1046, 355, 394, 1005, 890, 96, 123, 810, 824, 222, 78, 41, 735, 610, 980, 1051, 566, 60, 242, 403, 232, 219, 886, 1017, 258, 127, 49, 659, 615, 678, 539, 384, 965, 928, 77, 158, 904, 504, 995, 101, 630, 125, 460, 442, 134, 695, 705, 256, 499, 577, 808, 189, 227, 146, 673, 644, 97, 26, 389,
          827, 966, 458, 279, 262, 887, 138, 653, 643, 897, 743, 516, 906, 700, 556, 408, 794, 186, 114, 746, 620, 266, 814, 438, 44, 160, 891, 388, 299, 947, 211, 119, 527, 322, 359, 70, 557, 150, 1038, 942, 970, 744, 404, 231, 190, 202, 764, 69, 51, 13, 326, 454, 957, 466, 505, 569, 284, 773, 795, 42, 912, 448, 5, 992, 485, 805, 375, 109, 737, 128,
          692, 1012, 999, 959, 508, 657, 457, 1050, 234, 754, 487, 721, 676, 991, 59, 880, 542, 564, 196, 656, 507, 917, 491, 953 };

const unsigned char Mod_Hop_Map[FH_SRC_CNV_BIT] =
        { 52, 48, 72, 68, 76, 60, 56, 64, 48, 52, 72, 76, 56, 64, 48, 60, 72, 68, 76, 64, 52, 48, 60, 68, 76, 72, 64, 48, 52, 68, 56, 72, 76, 64, 52, 48, 68, 72, 76, 60, 52, 56, 68, 48, 72, 76, 60, 52, 56, 64, 48, 72, 76, 68, 52, 64, 56, 60, 48, 76, 68, 52, 56, 72, 48, 64, 68, 52, 76, 60, 56, 72, 48, 68, 76, 64, 52, 56, 72, 68, 60, 76, 64, 56, 72, 48, 52, 68, 64, 60, 76,
          56, 72, 48, 64, 60, 68, 52, 56, 48, 72, 76, 60, 64, 56, 68, 72, 52, 76, 60, 64, 48, 56, 72, 52, 60, 64, 48, 68, 56, 76, 72, 52, 48, 60, 68, 64, 56, 76, 52, 60, 68, 48, 64, 76, 56, 72, 60, 48, 68, 64, 52, 72, 56, 60, 68, 76, 48, 52, 56, 64, 60, 72, 68, 76, 48, 56, 60, 52, 64, 76, 68, 48, 72, 56, 52, 76, 60, 48, 64, 68, 52, 56, 76, 60, 64, 68, 72, 56, 52, 48, 76,
          68, 60, 72, 56, 52, 64, 76, 68, 60, 72, 52, 56, 76, 68, 64, 72, 60, 56, 48, 68, 64, 52, 72, 60, 76, 56, 68, 64, 72, 60, 76, 56, 48, 68, 64, 60, 52, 76, 56, 72, 68, 48, 64, 76, 60, 56, 52, 68, 72, 48, 64, 56, 60, 76, 68, 52, 72, 56, 48, 76, 60, 64, 68, 52, 48, 76, 72, 56, 64, 68, 60, 48, 76, 72, 64, 52, 56, 68, 60, 48, 64, 52, 72, 76, 68, 56, 48, 64, 52, 76, 72,
          60, 48, 56, 52, 64, 76, 60, 72, 48, 56, 64, 52, 76, 60, 72, 48, 56, 52, 64, 68, 76, 72, 60, 56, 64, 52, 48, 72, 60, 56, 76, 52, 68, 64, 60, 56, 48, 76, 52, 64, 68, 72, 60, 56, 76, 48, 52, 68, 60, 64, 72, 56, 48, 68, 60, 64, 72, 56, 48, 52, 68, 60, 76, 72, 56, 64, 68, 60, 52, 76, 48, 64, 68, 60, 56, 72, 76, 48, 68, 60, 56, 64, 76, 48, 52, 68, 60, 72, 56, 76, 48,
          68, 64, 60, 72, 52, 48, 76, 68, 60, 64, 72, 56, 76, 48, 68, 52, 60, 64, 56, 48, 76, 72, 68, 60, 52, 56, 64, 48, 72, 68, 52, 60, 64, 56, 76, 68, 48, 72, 60, 64, 52, 56, 48, 72, 76, 60, 52, 56, 48, 72, 64, 60, 68, 56, 52, 72, 48, 60, 76, 68, 56, 72, 48, 52, 76, 64, 56, 72, 48, 60, 68, 64, 76, 72, 52, 48, 56, 68, 60, 72, 64, 52, 48, 68, 76, 60, 72, 64, 48, 52, 68,
          76, 72, 56, 64, 60, 52, 48, 72, 56, 64, 60, 68, 48, 52, 72, 64, 56, 76, 60, 68, 48, 72, 52, 56, 64, 76, 68, 48, 60, 72, 56, 76, 68, 64, 60, 48, 52, 56, 72, 68, 64, 60, 48, 52, 72, 56, 76, 60, 48, 64, 52, 72, 68, 60, 76, 48, 56, 72, 64, 52, 68, 60, 76, 48, 64, 72, 56, 52, 68, 76, 48, 60, 64, 72, 68, 52, 48, 56, 64, 60, 72, 52, 76, 56, 64, 48, 72, 60, 76, 68, 64,
          56, 52, 72, 60, 68, 64, 56, 52, 48, 60, 72, 68, 56, 52, 48, 76, 64, 72, 68, 52, 60, 48, 64, 56, 72, 52, 76, 60, 48, 56, 68, 64, 52, 76, 48, 72, 68, 56, 60, 52, 64, 48, 72, 76, 68, 60, 52, 64, 56, 48, 68, 60, 76, 52, 64, 72, 48, 56, 60, 76, 68, 64, 48, 72, 56, 52, 60, 68, 64, 76, 72, 52, 48, 60, 56, 76, 68, 72, 48, 52, 60, 64, 68, 76, 72, 56, 60, 48, 52, 76, 68,
          64, 72, 60, 56, 52, 68, 48, 76, 72, 56, 52, 64, 48, 60, 72, 56, 68, 76, 52, 64, 72, 60, 48, 56, 76, 64, 52, 60, 72, 48, 68, 64, 52, 56, 76, 72, 68, 48, 60, 64, 76, 56, 68, 72, 60, 52, 76, 56, 64, 48, 72, 60, 52, 68, 76, 64, 48, 60, 56, 72, 68, 64, 52, 60, 48, 72, 76, 56, 52, 64, 48, 60, 68, 56, 72, 64, 52, 60, 76, 68, 56, 64, 52, 72, 60, 68, 56, 76, 52, 48, 64,
          60, 72, 68, 76, 48, 56, 60, 72, 68, 76, 64, 52, 48, 56, 72, 60, 68, 52, 76, 48, 72, 56, 68, 60, 52, 64, 76, 56, 48, 72, 52, 64, 68, 56, 76, 60, 48, 52, 68, 64, 56, 60, 76, 72, 52, 64, 68, 48, 56, 60, 52, 72, 68, 76, 56, 60, 52, 48, 64, 76, 72, 68, 60, 56, 48, 64, 52, 76, 68, 72, 48, 64, 56, 60, 76, 68, 72, 52, 56, 64, 76, 60, 48, 72, 68, 64, 52, 76, 60, 56, 48,
          64, 68, 52, 76, 60, 72, 64, 68, 52, 76, 60, 56, 48, 68, 64, 76, 52, 56, 48, 68, 72, 60, 64, 76, 52, 68, 72, 56, 64, 76, 52, 48, 68, 60, 64, 72, 76, 56, 48, 52, 60, 64, 76, 68, 48, 72, 60, 52, 56, 64, 68, 72, 60, 52, 56, 64, 68, 72, 60, 48, 76, 64, 68, 56, 72, 60, 76, 52, 48, 64, 68, 60, 72, 76, 52, 56, 64, 60, 72, 48, 52, 76, 68, 56, 60, 64, 48, 76, 68, 56, 60,
          52, 48, 76, 64, 68, 56, 60, 52, 48, 76, 68, 56, 72, 60, 48, 64, 52, 68, 76, 72, 48, 60, 56, 52, 64, 68, 72, 76, 56, 60, 48, 52, 68, 76, 64, 60, 56, 52, 72, 68, 48, 64, 60, 76, 72, 52, 48, 64, 68, 60, 72, 76, 48, 64, 52, 68, 60, 56, 76, 64, 72, 68, 52, 60, 56, 64, 72, 68, 48, 76, 56, 64, 52, 72, 48, 68, 76, 64, 52, 60, 56, 72, 76, 64, 48, 68, 56, 52, 60, 76, 48,
          64, 72, 56, 60, 76, 68, 52, 72, 64, 48, 56, 76, 60, 68, 64, 48, 56, 76, 60, 68, 64, 48, 72, 52, 60, 56, 64, 76, 72, 52, 48, 68, 60, 64, 76, 56, 72, 48, 60, 52, 76, 56, 72, 64, 48, 68, 76, 52, 56, 72, 48, 68, 64, 60, 52 };

static const unsigned char fh_whiten_seq[16] = {0x3B,0x30,0xFA,0xE5,0xCF,0x64,0x0D,0xD1,0x4D,0x73,0xF8,0xE9,0x0D,0x7E,0x40,0xC6};

static const unsigned char Code_Table0[4][256] =
        {
                {0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0},
                {0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1},
                {0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0},
                {0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1}
        };
static const unsigned char Code_Table1[4][256] =
        {
                {1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1},
                {1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0},
                {1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1},
                {1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0}
        };
static const unsigned char Next_State_Table[2][256] =
        {
                {0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127},
                {128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255}
        };

/* -------------------------------------接口函数实现------------------------------------------ */
/*****************************************************************************
 Prototype    : FH_Cnv_Enc419
 Description  : 419TURBO码编码
 Input        : *input,*Cnv_Enout,inlen
 Output       : NULL
 Return Value : NULL
*****************************************************************************/
void FH_Cnv_Enc419(unsigned char 	*input,
                   unsigned char 	*Cnv_Enout,
                   int 		inlen)
{
    int i;
    int j;

    memset(Cnv_Jump_State,
           0,
           sizeof(Cnv_Jump_State));

    for(i = 0;i < inlen;i++)
    {
        if(i == 0)
        {
            if(input[i] == 0)
            {
                Cnv_Jump_State[i] 			= Next_State_Table[0][0];
                for(j = 0;j < 4;j++)
                {
                    Cnv_Enout[4 * i + j] 	= Code_Table0[j][0];
                }
            }
            else
            {
                Cnv_Jump_State[i] 			= Next_State_Table[1][0];
                for(j = 0;j < 4;j++)
                {
                    Cnv_Enout[4 * i + j] 	= Code_Table1[j][0];
                }
            }
        }
        else
        {
            if(input[i] == 0)
            {
                Cnv_Jump_State[i] 			= Next_State_Table[0][Cnv_Jump_State[i - 1]];
                for(j = 0;j < 4;j++)
                {
                    Cnv_Enout[4 * i + j] 	= Code_Table0[j][Cnv_Jump_State[i - 1]];
                }
            }
            else
            {
                Cnv_Jump_State[i] 			= Next_State_Table[1][Cnv_Jump_State[i - 1]];
                for(j = 0;j < 4;j++)
                {
                    Cnv_Enout[4 * i + j] 	= Code_Table1[j][Cnv_Jump_State[i-1]];
                }
            }
        }
    }
}

/*****************************************************************************
 Prototype    : FH_Whiten
 Description  : 419TURBO码编码
 Input        : *pDataSrc,*pDataDes
 Output       : NULL
 Return Value : NULL
*****************************************************************************/
void FH_Whiten(unsigned char 	*pDataSrc,
               unsigned char 	*pDataDes)
{
    int k = 0;

    for (k = 0; k < FH_SRC_NUM_BYTE; k++)
    {
        *pDataDes++ = ((*pDataSrc++) ^ fh_whiten_seq[k % 16]);
    }


}


